                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.8.2 #5199 (Jul 29 2008) (MINGW32)
                              4 ; This file was generated Wed Aug 21 09:12:24 2019
                              5 ;--------------------------------------------------------
                              6 	.module DAC
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _i
                             13 	.globl _beep2_noteTime
                             14 	.globl _beep2_melody
                             15 	.globl _beep1_noteTime
                             16 	.globl _beep1_melody
                             17 	.globl _adobe_noteTime
                             18 	.globl _adobe_melody
                             19 	.globl _underworld_noteTime
                             20 	.globl _underworld_melody
                             21 	.globl _mainMario_noteTime
                             22 	.globl _mainMario_melody
                             23 	.globl _squareWave_PARM_2
                             24 	.globl _speaker_PARM_2
                             25 	.globl _Timer0
                             26 	.globl _dacWrite
                             27 	.globl _speaker
                             28 	.globl _squareWave
                             29 	.globl _sing
                             30 ;--------------------------------------------------------
                             31 ; special function registers
                             32 ;--------------------------------------------------------
                             33 	.area RSEG    (DATA)
                             34 ;--------------------------------------------------------
                             35 ; special function bits
                             36 ;--------------------------------------------------------
                             37 	.area RSEG    (DATA)
                             38 ;--------------------------------------------------------
                             39 ; overlayable register banks
                             40 ;--------------------------------------------------------
                             41 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      42 	.ds 8
                             43 ;--------------------------------------------------------
                             44 ; internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area DSEG    (DATA)
   0000                      47 _speaker_sloc0_1_0:
   0000                      48 	.ds 4
   0004                      49 _speaker_sloc1_1_0:
   0004                      50 	.ds 2
                             51 ;--------------------------------------------------------
                             52 ; overlayable items in internal ram 
                             53 ;--------------------------------------------------------
                             54 	.area OSEG    (OVR,DATA)
                             55 ;--------------------------------------------------------
                             56 ; indirectly addressable internal ram data
                             57 ;--------------------------------------------------------
                             58 	.area ISEG    (DATA)
                             59 ;--------------------------------------------------------
                             60 ; absolute internal ram data
                             61 ;--------------------------------------------------------
                             62 	.area IABS    (ABS,DATA)
                             63 	.area IABS    (ABS,DATA)
                             64 ;--------------------------------------------------------
                             65 ; bit data
                             66 ;--------------------------------------------------------
                             67 	.area BSEG    (BIT)
                             68 ;--------------------------------------------------------
                             69 ; paged external ram data
                             70 ;--------------------------------------------------------
                             71 	.area PSEG    (PAG,XDATA)
                             72 ;--------------------------------------------------------
                             73 ; external ram data
                             74 ;--------------------------------------------------------
                             75 	.area XSEG    (XDATA)
                    FFE4     76 _dacWrite	=	0xffe4
   0000                      77 _Timer0::
   0000                      78 	.ds 7
   0007                      79 _speaker_PARM_2:
   0007                      80 	.ds 2
   0009                      81 _speaker_note_1_1:
   0009                      82 	.ds 2
   000B                      83 _squareWave_PARM_2:
   000B                      84 	.ds 2
   000D                      85 _squareWave_note_1_1:
   000D                      86 	.ds 2
   000F                      87 _sing_song_1_1:
   000F                      88 	.ds 1
                             89 ;--------------------------------------------------------
                             90 ; absolute external ram data
                             91 ;--------------------------------------------------------
                             92 	.area XABS    (ABS,XDATA)
                             93 ;--------------------------------------------------------
                             94 ; external initialized ram data
                             95 ;--------------------------------------------------------
                             96 	.area XISEG   (XDATA)
   0000                      97 _mainMario_melody::
   0000                      98 	.ds 156
   009C                      99 _mainMario_noteTime::
   009C                     100 	.ds 78
   00EA                     101 _underworld_melody::
   00EA                     102 	.ds 112
   015A                     103 _underworld_noteTime::
   015A                     104 	.ds 56
   0192                     105 _adobe_melody::
   0192                     106 	.ds 32
   01B2                     107 _adobe_noteTime::
   01B2                     108 	.ds 16
   01C2                     109 _beep1_melody::
   01C2                     110 	.ds 4
   01C6                     111 _beep1_noteTime::
   01C6                     112 	.ds 2
   01C8                     113 _beep2_melody::
   01C8                     114 	.ds 4
   01CC                     115 _beep2_noteTime::
   01CC                     116 	.ds 2
   01CE                     117 _i::
   01CE                     118 	.ds 2
                            119 	.area HOME    (CODE)
                            120 	.area GSINIT0 (CODE)
                            121 	.area GSINIT1 (CODE)
                            122 	.area GSINIT2 (CODE)
                            123 	.area GSINIT3 (CODE)
                            124 	.area GSINIT4 (CODE)
                            125 	.area GSINIT5 (CODE)
                            126 	.area GSINIT  (CODE)
                            127 	.area GSFINAL (CODE)
                            128 	.area CSEG    (CODE)
                            129 ;--------------------------------------------------------
                            130 ; global & static initialisations
                            131 ;--------------------------------------------------------
                            132 	.area HOME    (CODE)
                            133 	.area GSINIT  (CODE)
                            134 	.area GSFINAL (CODE)
                            135 	.area GSINIT  (CODE)
                            136 ;--------------------------------------------------------
                            137 ; Home
                            138 ;--------------------------------------------------------
                            139 	.area HOME    (CODE)
                            140 	.area HOME    (CODE)
                            141 ;--------------------------------------------------------
                            142 ; code
                            143 ;--------------------------------------------------------
                            144 	.area CSEG    (CODE)
                            145 ;------------------------------------------------------------
                            146 ;Allocation info for local variables in function 'speaker'
                            147 ;------------------------------------------------------------
                            148 ;sloc0                     Allocated with name '_speaker_sloc0_1_0'
                            149 ;sloc1                     Allocated with name '_speaker_sloc1_1_0'
                            150 ;noteDuration              Allocated with name '_speaker_PARM_2'
                            151 ;note                      Allocated with name '_speaker_note_1_1'
                            152 ;numCycles                 Allocated with name '_speaker_numCycles_1_1'
                            153 ;i                         Allocated with name '_speaker_i_1_1'
                            154 ;n                         Allocated with name '_speaker_n_1_1'
                            155 ;------------------------------------------------------------
                            156 ;	DAC.c:9: void speaker(unsigned int note, unsigned int noteDuration){
                            157 ;	-----------------------------------------
                            158 ;	 function speaker
                            159 ;	-----------------------------------------
   0000                     160 _speaker:
                    0002    161 	ar2 = 0x02
                    0003    162 	ar3 = 0x03
                    0004    163 	ar4 = 0x04
                    0005    164 	ar5 = 0x05
                    0006    165 	ar6 = 0x06
                    0007    166 	ar7 = 0x07
                    0000    167 	ar0 = 0x00
                    0001    168 	ar1 = 0x01
   0000 AA 83               169 	mov	r2,dph
   0002 E5 82               170 	mov	a,dpl
   0004 90s00r09            171 	mov	dptr,#_speaker_note_1_1
   0007 F0                  172 	movx	@dptr,a
   0008 A3                  173 	inc	dptr
   0009 EA                  174 	mov	a,r2
   000A F0                  175 	movx	@dptr,a
                            176 ;	DAC.c:10: long numCycles = note * noteDuration / 1000; 
   000B 90s00r07            177 	mov	dptr,#_speaker_PARM_2
   000E E0                  178 	movx	a,@dptr
   000F FA                  179 	mov	r2,a
   0010 A3                  180 	inc	dptr
   0011 E0                  181 	movx	a,@dptr
   0012 FB                  182 	mov	r3,a
   0013 90s00r09            183 	mov	dptr,#_speaker_note_1_1
   0016 E0                  184 	movx	a,@dptr
   0017 FC                  185 	mov	r4,a
   0018 A3                  186 	inc	dptr
   0019 E0                  187 	movx	a,@dptr
   001A FD                  188 	mov	r5,a
   001B 90s00r00            189 	mov	dptr,#__mulint_PARM_2
   001E EA                  190 	mov	a,r2
   001F F0                  191 	movx	@dptr,a
   0020 A3                  192 	inc	dptr
   0021 EB                  193 	mov	a,r3
   0022 F0                  194 	movx	@dptr,a
   0023 8C 82               195 	mov	dpl,r4
   0025 8D 83               196 	mov	dph,r5
   0027 C0 04               197 	push	ar4
   0029 C0 05               198 	push	ar5
   002B 12s00r00            199 	lcall	__mulint
   002E AA 82               200 	mov	r2,dpl
   0030 AB 83               201 	mov	r3,dph
   0032 90s00r00            202 	mov	dptr,#__divuint_PARM_2
   0035 74 E8               203 	mov	a,#0xE8
   0037 F0                  204 	movx	@dptr,a
   0038 A3                  205 	inc	dptr
   0039 74 03               206 	mov	a,#0x03
   003B F0                  207 	movx	@dptr,a
   003C 8A 82               208 	mov	dpl,r2
   003E 8B 83               209 	mov	dph,r3
   0040 12s00r00            210 	lcall	__divuint
   0043 AA 82               211 	mov	r2,dpl
   0045 AB 83               212 	mov	r3,dph
   0047 D0 05               213 	pop	ar5
   0049 D0 04               214 	pop	ar4
   004B 7E 00               215 	mov	r6,#0x00
   004D 7F 00               216 	mov	r7,#0x00
                            217 ;	DAC.c:14: for (i = 0; i < numCycles; i++) { 
   004F 8C 00               218 	mov	ar0,r4
   0051 8D 01               219 	mov	ar1,r5
   0053 E4                  220 	clr	a
   0054 F5*00               221 	mov	_speaker_sloc0_1_0,a
   0056 F5*01               222 	mov	(_speaker_sloc0_1_0 + 1),a
   0058 F5*02               223 	mov	(_speaker_sloc0_1_0 + 2),a
   005A F5*03               224 	mov	(_speaker_sloc0_1_0 + 3),a
   005C                     225 00109$:
   005C C3                  226 	clr	c
   005D E5*00               227 	mov	a,_speaker_sloc0_1_0
   005F 9A                  228 	subb	a,r2
   0060 E5*01               229 	mov	a,(_speaker_sloc0_1_0 + 1)
   0062 9B                  230 	subb	a,r3
   0063 E5*02               231 	mov	a,(_speaker_sloc0_1_0 + 2)
   0065 9E                  232 	subb	a,r6
   0066 E5*03               233 	mov	a,(_speaker_sloc0_1_0 + 3)
   0068 64 80               234 	xrl	a,#0x80
   006A 8F F0               235 	mov	b,r7
   006C 63 F0 80            236 	xrl	b,#0x80
   006F 95 F0               237 	subb	a,b
   0071 50 4F               238 	jnc	00113$
                            239 ;	DAC.c:15: dacWrite = 255;
   0073 90 FF E4            240 	mov	dptr,#_dacWrite
   0076 74 FF               241 	mov	a,#0xFF
   0078 F0                  242 	movx	@dptr,a
                            243 ;	DAC.c:16: for(n = 0;n< note ;n++);
   0079 E4                  244 	clr	a
   007A F5*04               245 	mov	_speaker_sloc1_1_0,a
   007C F5*05               246 	mov	(_speaker_sloc1_1_0 + 1),a
   007E                     247 00101$:
   007E C3                  248 	clr	c
   007F E5*04               249 	mov	a,_speaker_sloc1_1_0
   0081 98                  250 	subb	a,r0
   0082 E5*05               251 	mov	a,(_speaker_sloc1_1_0 + 1)
   0084 99                  252 	subb	a,r1
   0085 50 0A               253 	jnc	00104$
   0087 05*04               254 	inc	_speaker_sloc1_1_0
   0089 E4                  255 	clr	a
   008A B5*04 F1            256 	cjne	a,_speaker_sloc1_1_0,00101$
   008D 05*05               257 	inc	(_speaker_sloc1_1_0 + 1)
   008F 80 ED               258 	sjmp	00101$
   0091                     259 00104$:
                            260 ;	DAC.c:17: dacWrite = 0;
   0091 90 FF E4            261 	mov	dptr,#_dacWrite
   0094 E4                  262 	clr	a
   0095 F0                  263 	movx	@dptr,a
                            264 ;	DAC.c:18: for(n = 0;n< note;n++);
   0096 E4                  265 	clr	a
   0097 F5*04               266 	mov	_speaker_sloc1_1_0,a
   0099 F5*05               267 	mov	(_speaker_sloc1_1_0 + 1),a
   009B                     268 00105$:
   009B C3                  269 	clr	c
   009C E5*04               270 	mov	a,_speaker_sloc1_1_0
   009E 9C                  271 	subb	a,r4
   009F E5*05               272 	mov	a,(_speaker_sloc1_1_0 + 1)
   00A1 9D                  273 	subb	a,r5
   00A2 50 0A               274 	jnc	00111$
   00A4 05*04               275 	inc	_speaker_sloc1_1_0
   00A6 E4                  276 	clr	a
   00A7 B5*04 F1            277 	cjne	a,_speaker_sloc1_1_0,00105$
   00AA 05*05               278 	inc	(_speaker_sloc1_1_0 + 1)
   00AC 80 ED               279 	sjmp	00105$
   00AE                     280 00111$:
                            281 ;	DAC.c:14: for (i = 0; i < numCycles; i++) { 
   00AE 05*00               282 	inc	_speaker_sloc0_1_0
   00B0 E4                  283 	clr	a
   00B1 B5*00 0C            284 	cjne	a,_speaker_sloc0_1_0,00127$
   00B4 05*01               285 	inc	(_speaker_sloc0_1_0 + 1)
   00B6 B5*01 07            286 	cjne	a,(_speaker_sloc0_1_0 + 1),00127$
   00B9 05*02               287 	inc	(_speaker_sloc0_1_0 + 2)
   00BB B5*02 9E            288 	cjne	a,(_speaker_sloc0_1_0 + 2),00109$
   00BE 05*03               289 	inc	(_speaker_sloc0_1_0 + 3)
   00C0                     290 00127$:
   00C0 80 9A               291 	sjmp	00109$
   00C2                     292 00113$:
   00C2 22                  293 	ret
                            294 ;------------------------------------------------------------
                            295 ;Allocation info for local variables in function 'squareWave'
                            296 ;------------------------------------------------------------
                            297 ;tempo                     Allocated with name '_squareWave_PARM_2'
                            298 ;note                      Allocated with name '_squareWave_note_1_1'
                            299 ;noteDuration              Allocated with name '_squareWave_noteDuration_1_1'
                            300 ;pauseBetweenNotes         Allocated with name '_squareWave_pauseBetweenNotes_1_1'
                            301 ;------------------------------------------------------------
                            302 ;	DAC.c:25: void squareWave(unsigned int note, unsigned int tempo){
                            303 ;	-----------------------------------------
                            304 ;	 function squareWave
                            305 ;	-----------------------------------------
   00C3                     306 _squareWave:
   00C3 AA 83               307 	mov	r2,dph
   00C5 E5 82               308 	mov	a,dpl
   00C7 90s00r0D            309 	mov	dptr,#_squareWave_note_1_1
   00CA F0                  310 	movx	@dptr,a
   00CB A3                  311 	inc	dptr
   00CC EA                  312 	mov	a,r2
   00CD F0                  313 	movx	@dptr,a
                            314 ;	DAC.c:27: unsigned int noteDuration = 1000 / tempo;
   00CE 90s00r0B            315 	mov	dptr,#_squareWave_PARM_2
   00D1 E0                  316 	movx	a,@dptr
   00D2 FA                  317 	mov	r2,a
   00D3 A3                  318 	inc	dptr
   00D4 E0                  319 	movx	a,@dptr
   00D5 FB                  320 	mov	r3,a
   00D6 90s00r00            321 	mov	dptr,#__divuint_PARM_2
   00D9 EA                  322 	mov	a,r2
   00DA F0                  323 	movx	@dptr,a
   00DB A3                  324 	inc	dptr
   00DC EB                  325 	mov	a,r3
   00DD F0                  326 	movx	@dptr,a
                            327 ;	DAC.c:30: speaker(note,noteDuration);  
   00DE 90 03 E8            328 	mov	dptr,#0x03E8
   00E1 12s00r00            329 	lcall	__divuint
   00E4 AA 82               330 	mov	r2,dpl
   00E6 AB 83               331 	mov	r3,dph
   00E8 90s00r0D            332 	mov	dptr,#_squareWave_note_1_1
   00EB E0                  333 	movx	a,@dptr
   00EC FC                  334 	mov	r4,a
   00ED A3                  335 	inc	dptr
   00EE E0                  336 	movx	a,@dptr
   00EF FD                  337 	mov	r5,a
   00F0 90s00r07            338 	mov	dptr,#_speaker_PARM_2
   00F3 EA                  339 	mov	a,r2
   00F4 F0                  340 	movx	@dptr,a
   00F5 A3                  341 	inc	dptr
   00F6 EB                  342 	mov	a,r3
   00F7 F0                  343 	movx	@dptr,a
   00F8 8C 82               344 	mov	dpl,r4
   00FA 8D 83               345 	mov	dph,r5
   00FC C0 02               346 	push	ar2
   00FE C0 03               347 	push	ar3
   0100 12s00r00            348 	lcall	_speaker
   0103 D0 03               349 	pop	ar3
   0105 D0 02               350 	pop	ar2
                            351 ;	DAC.c:35: speaker(PAUSE,noteDuration); 
   0107 90s00r07            352 	mov	dptr,#_speaker_PARM_2
   010A EA                  353 	mov	a,r2
   010B F0                  354 	movx	@dptr,a
   010C A3                  355 	inc	dptr
   010D EB                  356 	mov	a,r3
   010E F0                  357 	movx	@dptr,a
   010F 90 00 00            358 	mov	dptr,#0x0000
   0112 02s00r00            359 	ljmp	_speaker
                            360 ;------------------------------------------------------------
                            361 ;Allocation info for local variables in function 'sing'
                            362 ;------------------------------------------------------------
                            363 ;song                      Allocated with name '_sing_song_1_1'
                            364 ;------------------------------------------------------------
                            365 ;	DAC.c:41: void sing(unsigned char song) {
                            366 ;	-----------------------------------------
                            367 ;	 function sing
                            368 ;	-----------------------------------------
   0115                     369 _sing:
   0115 E5 82               370 	mov	a,dpl
   0117 90s00r0F            371 	mov	dptr,#_sing_song_1_1
   011A F0                  372 	movx	@dptr,a
                            373 ;	DAC.c:44: if(song == 1){
   011B 90s00r0F            374 	mov	dptr,#_sing_song_1_1
   011E E0                  375 	movx	a,@dptr
   011F FA                  376 	mov	r2,a
   0120 BA 01 64            377 	cjne	r2,#0x01,00122$
                            378 ;	DAC.c:46: squareWave(adobe_melody[i],adobe_noteTime[i]);
   0123 90s01rCE            379 	mov	dptr,#_i
   0126 E0                  380 	movx	a,@dptr
   0127 FB                  381 	mov	r3,a
   0128 A3                  382 	inc	dptr
   0129 E0                  383 	movx	a,@dptr
   012A FC                  384 	mov	r4,a
   012B 8B 05               385 	mov	ar5,r3
   012D CD                  386 	xch	a,r5
   012E 25 E0               387 	add	a,acc
   0130 CD                  388 	xch	a,r5
   0131 33                  389 	rlc	a
   0132 FE                  390 	mov	r6,a
   0133 ED                  391 	mov	a,r5
   0134 24r92               392 	add	a,#_adobe_melody
   0136 F5 82               393 	mov	dpl,a
   0138 EE                  394 	mov	a,r6
   0139 34s01               395 	addc	a,#(_adobe_melody >> 8)
   013B F5 83               396 	mov	dph,a
   013D E0                  397 	movx	a,@dptr
   013E FD                  398 	mov	r5,a
   013F A3                  399 	inc	dptr
   0140 E0                  400 	movx	a,@dptr
   0141 FE                  401 	mov	r6,a
   0142 EB                  402 	mov	a,r3
   0143 24rB2               403 	add	a,#_adobe_noteTime
   0145 F5 82               404 	mov	dpl,a
   0147 EC                  405 	mov	a,r4
   0148 34s01               406 	addc	a,#(_adobe_noteTime >> 8)
   014A F5 83               407 	mov	dph,a
   014C E0                  408 	movx	a,@dptr
   014D 90s00r0B            409 	mov	dptr,#_squareWave_PARM_2
   0150 F0                  410 	movx	@dptr,a
   0151 A3                  411 	inc	dptr
   0152 E4                  412 	clr	a
   0153 F0                  413 	movx	@dptr,a
   0154 8D 82               414 	mov	dpl,r5
   0156 8E 83               415 	mov	dph,r6
   0158 12s00rC3            416 	lcall	_squareWave
                            417 ;	DAC.c:48: if(i+1<(sizeof(adobe_melody)/sizeof(unsigned int)))
   015B 90s01rCE            418 	mov	dptr,#_i
   015E E0                  419 	movx	a,@dptr
   015F FB                  420 	mov	r3,a
   0160 A3                  421 	inc	dptr
   0161 E0                  422 	movx	a,@dptr
   0162 FC                  423 	mov	r4,a
   0163 74 01               424 	mov	a,#0x01
   0165 2B                  425 	add	a,r3
   0166 FD                  426 	mov	r5,a
   0167 E4                  427 	clr	a
   0168 3C                  428 	addc	a,r4
   0169 FE                  429 	mov	r6,a
   016A C3                  430 	clr	c
   016B ED                  431 	mov	a,r5
   016C 94 10               432 	subb	a,#0x10
   016E EE                  433 	mov	a,r6
   016F 94 00               434 	subb	a,#0x00
   0171 50 0C               435 	jnc	00102$
                            436 ;	DAC.c:49: i++;
   0173 90s01rCE            437 	mov	dptr,#_i
   0176 74 01               438 	mov	a,#0x01
   0178 2B                  439 	add	a,r3
   0179 F0                  440 	movx	@dptr,a
   017A E4                  441 	clr	a
   017B 3C                  442 	addc	a,r4
   017C A3                  443 	inc	dptr
   017D F0                  444 	movx	@dptr,a
   017E 22                  445 	ret
   017F                     446 00102$:
                            447 ;	DAC.c:51: i = 0;
   017F 90s01rCE            448 	mov	dptr,#_i
   0182 E4                  449 	clr	a
   0183 F0                  450 	movx	@dptr,a
   0184 A3                  451 	inc	dptr
   0185 F0                  452 	movx	@dptr,a
   0186 22                  453 	ret
   0187                     454 00122$:
                            455 ;	DAC.c:54: else if(song == 2){
   0187 BA 02 64            456 	cjne	r2,#0x02,00119$
                            457 ;	DAC.c:55: squareWave(underworld_melody[i],underworld_noteTime[i]);
   018A 90s01rCE            458 	mov	dptr,#_i
   018D E0                  459 	movx	a,@dptr
   018E FB                  460 	mov	r3,a
   018F A3                  461 	inc	dptr
   0190 E0                  462 	movx	a,@dptr
   0191 FC                  463 	mov	r4,a
   0192 8B 05               464 	mov	ar5,r3
   0194 CD                  465 	xch	a,r5
   0195 25 E0               466 	add	a,acc
   0197 CD                  467 	xch	a,r5
   0198 33                  468 	rlc	a
   0199 FE                  469 	mov	r6,a
   019A ED                  470 	mov	a,r5
   019B 24rEA               471 	add	a,#_underworld_melody
   019D F5 82               472 	mov	dpl,a
   019F EE                  473 	mov	a,r6
   01A0 34s00               474 	addc	a,#(_underworld_melody >> 8)
   01A2 F5 83               475 	mov	dph,a
   01A4 E0                  476 	movx	a,@dptr
   01A5 FD                  477 	mov	r5,a
   01A6 A3                  478 	inc	dptr
   01A7 E0                  479 	movx	a,@dptr
   01A8 FE                  480 	mov	r6,a
   01A9 EB                  481 	mov	a,r3
   01AA 24r5A               482 	add	a,#_underworld_noteTime
   01AC F5 82               483 	mov	dpl,a
   01AE EC                  484 	mov	a,r4
   01AF 34s01               485 	addc	a,#(_underworld_noteTime >> 8)
   01B1 F5 83               486 	mov	dph,a
   01B3 E0                  487 	movx	a,@dptr
   01B4 90s00r0B            488 	mov	dptr,#_squareWave_PARM_2
   01B7 F0                  489 	movx	@dptr,a
   01B8 A3                  490 	inc	dptr
   01B9 E4                  491 	clr	a
   01BA F0                  492 	movx	@dptr,a
   01BB 8D 82               493 	mov	dpl,r5
   01BD 8E 83               494 	mov	dph,r6
   01BF 12s00rC3            495 	lcall	_squareWave
                            496 ;	DAC.c:57: if(i+1<(sizeof(underworld_melody)/sizeof(unsigned int)))
   01C2 90s01rCE            497 	mov	dptr,#_i
   01C5 E0                  498 	movx	a,@dptr
   01C6 FB                  499 	mov	r3,a
   01C7 A3                  500 	inc	dptr
   01C8 E0                  501 	movx	a,@dptr
   01C9 FC                  502 	mov	r4,a
   01CA 74 01               503 	mov	a,#0x01
   01CC 2B                  504 	add	a,r3
   01CD FD                  505 	mov	r5,a
   01CE E4                  506 	clr	a
   01CF 3C                  507 	addc	a,r4
   01D0 FE                  508 	mov	r6,a
   01D1 C3                  509 	clr	c
   01D2 ED                  510 	mov	a,r5
   01D3 94 38               511 	subb	a,#0x38
   01D5 EE                  512 	mov	a,r6
   01D6 94 00               513 	subb	a,#0x00
   01D8 50 0C               514 	jnc	00105$
                            515 ;	DAC.c:58: i++;
   01DA 90s01rCE            516 	mov	dptr,#_i
   01DD 74 01               517 	mov	a,#0x01
   01DF 2B                  518 	add	a,r3
   01E0 F0                  519 	movx	@dptr,a
   01E1 E4                  520 	clr	a
   01E2 3C                  521 	addc	a,r4
   01E3 A3                  522 	inc	dptr
   01E4 F0                  523 	movx	@dptr,a
   01E5 22                  524 	ret
   01E6                     525 00105$:
                            526 ;	DAC.c:60: i = 0;
   01E6 90s01rCE            527 	mov	dptr,#_i
   01E9 E4                  528 	clr	a
   01EA F0                  529 	movx	@dptr,a
   01EB A3                  530 	inc	dptr
   01EC F0                  531 	movx	@dptr,a
   01ED 22                  532 	ret
   01EE                     533 00119$:
                            534 ;	DAC.c:62: else if(song == 3){
   01EE BA 03 64            535 	cjne	r2,#0x03,00116$
                            536 ;	DAC.c:63: squareWave(mainMario_melody[i],mainMario_noteTime[i]);
   01F1 90s01rCE            537 	mov	dptr,#_i
   01F4 E0                  538 	movx	a,@dptr
   01F5 FB                  539 	mov	r3,a
   01F6 A3                  540 	inc	dptr
   01F7 E0                  541 	movx	a,@dptr
   01F8 FC                  542 	mov	r4,a
   01F9 8B 05               543 	mov	ar5,r3
   01FB CD                  544 	xch	a,r5
   01FC 25 E0               545 	add	a,acc
   01FE CD                  546 	xch	a,r5
   01FF 33                  547 	rlc	a
   0200 FE                  548 	mov	r6,a
   0201 ED                  549 	mov	a,r5
   0202 24r00               550 	add	a,#_mainMario_melody
   0204 F5 82               551 	mov	dpl,a
   0206 EE                  552 	mov	a,r6
   0207 34s00               553 	addc	a,#(_mainMario_melody >> 8)
   0209 F5 83               554 	mov	dph,a
   020B E0                  555 	movx	a,@dptr
   020C FD                  556 	mov	r5,a
   020D A3                  557 	inc	dptr
   020E E0                  558 	movx	a,@dptr
   020F FE                  559 	mov	r6,a
   0210 EB                  560 	mov	a,r3
   0211 24r9C               561 	add	a,#_mainMario_noteTime
   0213 F5 82               562 	mov	dpl,a
   0215 EC                  563 	mov	a,r4
   0216 34s00               564 	addc	a,#(_mainMario_noteTime >> 8)
   0218 F5 83               565 	mov	dph,a
   021A E0                  566 	movx	a,@dptr
   021B 90s00r0B            567 	mov	dptr,#_squareWave_PARM_2
   021E F0                  568 	movx	@dptr,a
   021F A3                  569 	inc	dptr
   0220 E4                  570 	clr	a
   0221 F0                  571 	movx	@dptr,a
   0222 8D 82               572 	mov	dpl,r5
   0224 8E 83               573 	mov	dph,r6
   0226 12s00rC3            574 	lcall	_squareWave
                            575 ;	DAC.c:65: if(i+1<(sizeof(mainMario_melody)/sizeof(unsigned int)))
   0229 90s01rCE            576 	mov	dptr,#_i
   022C E0                  577 	movx	a,@dptr
   022D FB                  578 	mov	r3,a
   022E A3                  579 	inc	dptr
   022F E0                  580 	movx	a,@dptr
   0230 FC                  581 	mov	r4,a
   0231 74 01               582 	mov	a,#0x01
   0233 2B                  583 	add	a,r3
   0234 FD                  584 	mov	r5,a
   0235 E4                  585 	clr	a
   0236 3C                  586 	addc	a,r4
   0237 FE                  587 	mov	r6,a
   0238 C3                  588 	clr	c
   0239 ED                  589 	mov	a,r5
   023A 94 4E               590 	subb	a,#0x4E
   023C EE                  591 	mov	a,r6
   023D 94 00               592 	subb	a,#0x00
   023F 50 0C               593 	jnc	00108$
                            594 ;	DAC.c:66: i++;
   0241 90s01rCE            595 	mov	dptr,#_i
   0244 74 01               596 	mov	a,#0x01
   0246 2B                  597 	add	a,r3
   0247 F0                  598 	movx	@dptr,a
   0248 E4                  599 	clr	a
   0249 3C                  600 	addc	a,r4
   024A A3                  601 	inc	dptr
   024B F0                  602 	movx	@dptr,a
   024C 22                  603 	ret
   024D                     604 00108$:
                            605 ;	DAC.c:68: i = 0;
   024D 90s01rCE            606 	mov	dptr,#_i
   0250 E4                  607 	clr	a
   0251 F0                  608 	movx	@dptr,a
   0252 A3                  609 	inc	dptr
   0253 F0                  610 	movx	@dptr,a
   0254 22                  611 	ret
   0255                     612 00116$:
                            613 ;	DAC.c:70: else if(song == 4){
   0255 BA 04 5F            614 	cjne	r2,#0x04,00113$
                            615 ;	DAC.c:71: for( i =0;i<(sizeof(beep1_melody)/sizeof(int));i++)
   0258 90s01rCE            616 	mov	dptr,#_i
   025B E4                  617 	clr	a
   025C F0                  618 	movx	@dptr,a
   025D A3                  619 	inc	dptr
   025E F0                  620 	movx	@dptr,a
   025F                     621 00124$:
   025F 90s01rCE            622 	mov	dptr,#_i
   0262 E0                  623 	movx	a,@dptr
   0263 FB                  624 	mov	r3,a
   0264 A3                  625 	inc	dptr
   0265 E0                  626 	movx	a,@dptr
   0266 FC                  627 	mov	r4,a
   0267 C3                  628 	clr	c
   0268 EB                  629 	mov	a,r3
   0269 94 02               630 	subb	a,#0x02
   026B EC                  631 	mov	a,r4
   026C 94 00               632 	subb	a,#0x00
   026E 40 01               633 	jc	00157$
   0270 22                  634 	ret
   0271                     635 00157$:
                            636 ;	DAC.c:72: squareWave(beep1_melody[i],beep1_noteTime[i]);
   0271 8B 05               637 	mov	ar5,r3
   0273 EC                  638 	mov	a,r4
   0274 CD                  639 	xch	a,r5
   0275 25 E0               640 	add	a,acc
   0277 CD                  641 	xch	a,r5
   0278 33                  642 	rlc	a
   0279 FE                  643 	mov	r6,a
   027A ED                  644 	mov	a,r5
   027B 24rC2               645 	add	a,#_beep1_melody
   027D F5 82               646 	mov	dpl,a
   027F EE                  647 	mov	a,r6
   0280 34s01               648 	addc	a,#(_beep1_melody >> 8)
   0282 F5 83               649 	mov	dph,a
   0284 E0                  650 	movx	a,@dptr
   0285 FD                  651 	mov	r5,a
   0286 A3                  652 	inc	dptr
   0287 E0                  653 	movx	a,@dptr
   0288 FE                  654 	mov	r6,a
   0289 EB                  655 	mov	a,r3
   028A 24rC6               656 	add	a,#_beep1_noteTime
   028C F5 82               657 	mov	dpl,a
   028E EC                  658 	mov	a,r4
   028F 34s01               659 	addc	a,#(_beep1_noteTime >> 8)
   0291 F5 83               660 	mov	dph,a
   0293 E0                  661 	movx	a,@dptr
   0294 90s00r0B            662 	mov	dptr,#_squareWave_PARM_2
   0297 F0                  663 	movx	@dptr,a
   0298 A3                  664 	inc	dptr
   0299 E4                  665 	clr	a
   029A F0                  666 	movx	@dptr,a
   029B 8D 82               667 	mov	dpl,r5
   029D 8E 83               668 	mov	dph,r6
   029F 12s00rC3            669 	lcall	_squareWave
                            670 ;	DAC.c:71: for( i =0;i<(sizeof(beep1_melody)/sizeof(int));i++)
   02A2 90s01rCE            671 	mov	dptr,#_i
   02A5 E0                  672 	movx	a,@dptr
   02A6 FB                  673 	mov	r3,a
   02A7 A3                  674 	inc	dptr
   02A8 E0                  675 	movx	a,@dptr
   02A9 FC                  676 	mov	r4,a
   02AA 90s01rCE            677 	mov	dptr,#_i
   02AD 74 01               678 	mov	a,#0x01
   02AF 2B                  679 	add	a,r3
   02B0 F0                  680 	movx	@dptr,a
   02B1 E4                  681 	clr	a
   02B2 3C                  682 	addc	a,r4
   02B3 A3                  683 	inc	dptr
   02B4 F0                  684 	movx	@dptr,a
   02B5 80 A8               685 	sjmp	00124$
   02B7                     686 00113$:
                            687 ;	DAC.c:74: else if(song == 5){
   02B7 BA 05 5E            688 	cjne	r2,#0x05,00132$
                            689 ;	DAC.c:75: for( i =0;i<(sizeof(beep2_melody)/sizeof(int));i++)
   02BA 90s01rCE            690 	mov	dptr,#_i
   02BD E4                  691 	clr	a
   02BE F0                  692 	movx	@dptr,a
   02BF A3                  693 	inc	dptr
   02C0 F0                  694 	movx	@dptr,a
   02C1                     695 00128$:
   02C1 90s01rCE            696 	mov	dptr,#_i
   02C4 E0                  697 	movx	a,@dptr
   02C5 FA                  698 	mov	r2,a
   02C6 A3                  699 	inc	dptr
   02C7 E0                  700 	movx	a,@dptr
   02C8 FB                  701 	mov	r3,a
   02C9 C3                  702 	clr	c
   02CA EA                  703 	mov	a,r2
   02CB 94 02               704 	subb	a,#0x02
   02CD EB                  705 	mov	a,r3
   02CE 94 00               706 	subb	a,#0x00
   02D0 50 46               707 	jnc	00132$
                            708 ;	DAC.c:76: squareWave(beep2_melody[i],beep2_noteTime[i]);
   02D2 8A 04               709 	mov	ar4,r2
   02D4 EB                  710 	mov	a,r3
   02D5 CC                  711 	xch	a,r4
   02D6 25 E0               712 	add	a,acc
   02D8 CC                  713 	xch	a,r4
   02D9 33                  714 	rlc	a
   02DA FD                  715 	mov	r5,a
   02DB EC                  716 	mov	a,r4
   02DC 24rC8               717 	add	a,#_beep2_melody
   02DE F5 82               718 	mov	dpl,a
   02E0 ED                  719 	mov	a,r5
   02E1 34s01               720 	addc	a,#(_beep2_melody >> 8)
   02E3 F5 83               721 	mov	dph,a
   02E5 E0                  722 	movx	a,@dptr
   02E6 FC                  723 	mov	r4,a
   02E7 A3                  724 	inc	dptr
   02E8 E0                  725 	movx	a,@dptr
   02E9 FD                  726 	mov	r5,a
   02EA EA                  727 	mov	a,r2
   02EB 24rCC               728 	add	a,#_beep2_noteTime
   02ED F5 82               729 	mov	dpl,a
   02EF EB                  730 	mov	a,r3
   02F0 34s01               731 	addc	a,#(_beep2_noteTime >> 8)
   02F2 F5 83               732 	mov	dph,a
   02F4 E0                  733 	movx	a,@dptr
   02F5 90s00r0B            734 	mov	dptr,#_squareWave_PARM_2
   02F8 F0                  735 	movx	@dptr,a
   02F9 A3                  736 	inc	dptr
   02FA E4                  737 	clr	a
   02FB F0                  738 	movx	@dptr,a
   02FC 8C 82               739 	mov	dpl,r4
   02FE 8D 83               740 	mov	dph,r5
   0300 12s00rC3            741 	lcall	_squareWave
                            742 ;	DAC.c:75: for( i =0;i<(sizeof(beep2_melody)/sizeof(int));i++)
   0303 90s01rCE            743 	mov	dptr,#_i
   0306 E0                  744 	movx	a,@dptr
   0307 FA                  745 	mov	r2,a
   0308 A3                  746 	inc	dptr
   0309 E0                  747 	movx	a,@dptr
   030A FB                  748 	mov	r3,a
   030B 90s01rCE            749 	mov	dptr,#_i
   030E 74 01               750 	mov	a,#0x01
   0310 2A                  751 	add	a,r2
   0311 F0                  752 	movx	@dptr,a
   0312 E4                  753 	clr	a
   0313 3B                  754 	addc	a,r3
   0314 A3                  755 	inc	dptr
   0315 F0                  756 	movx	@dptr,a
   0316 80 A9               757 	sjmp	00128$
   0318                     758 00132$:
   0318 22                  759 	ret
                            760 	.area CSEG    (CODE)
                            761 	.area CONST   (CODE)
                            762 	.area XINIT   (CODE)
   0000                     763 __xinit__mainMario_melody:
   0000 63 00               764 	.byte #0x63,#0x00
   0002 63 00               765 	.byte #0x63,#0x00
   0004 00 00               766 	.byte #0x00,#0x00
   0006 63 00               767 	.byte #0x63,#0x00
   0008 00 00               768 	.byte #0x00,#0x00
   000A 7D 00               769 	.byte #0x7D,#0x00
   000C 63 00               770 	.byte #0x63,#0x00
   000E 00 00               771 	.byte #0x00,#0x00
   0010 54 00               772 	.byte #0x54,#0x00
   0012 00 00               773 	.byte #0x00,#0x00
   0014 00 00               774 	.byte #0x00,#0x00
   0016 00 00               775 	.byte #0x00,#0x00
   0018 A7 00               776 	.byte #0xA7,#0x00
   001A 00 00               777 	.byte #0x00,#0x00
   001C 00 00               778 	.byte #0x00,#0x00
   001E 00 00               779 	.byte #0x00,#0x00
   0020 7D 00               780 	.byte #0x7D,#0x00
   0022 00 00               781 	.byte #0x00,#0x00
   0024 00 00               782 	.byte #0x00,#0x00
   0026 A7 00               783 	.byte #0xA7,#0x00
   0028 00 00               784 	.byte #0x00,#0x00
   002A 00 00               785 	.byte #0x00,#0x00
   002C C7 00               786 	.byte #0xC7,#0x00
   002E 00 00               787 	.byte #0x00,#0x00
   0030 00 00               788 	.byte #0x00,#0x00
   0032 95 00               789 	.byte #0x95,#0x00
   0034 00 00               790 	.byte #0x00,#0x00
   0036 85 00               791 	.byte #0x85,#0x00
   0038 00 00               792 	.byte #0x00,#0x00
   003A 8D 00               793 	.byte #0x8D,#0x00
   003C 95 00               794 	.byte #0x95,#0x00
   003E 00 00               795 	.byte #0x00,#0x00
   0040 A7 00               796 	.byte #0xA7,#0x00
   0042 63 00               797 	.byte #0x63,#0x00
   0044 54 00               798 	.byte #0x54,#0x00
   0046 4B 00               799 	.byte #0x4B,#0x00
   0048 00 00               800 	.byte #0x00,#0x00
   004A 5E 00               801 	.byte #0x5E,#0x00
   004C 54 00               802 	.byte #0x54,#0x00
   004E 00 00               803 	.byte #0x00,#0x00
   0050 63 00               804 	.byte #0x63,#0x00
   0052 00 00               805 	.byte #0x00,#0x00
   0054 7D 00               806 	.byte #0x7D,#0x00
   0056 70 00               807 	.byte #0x70,#0x00
   0058 85 00               808 	.byte #0x85,#0x00
   005A 00 00               809 	.byte #0x00,#0x00
   005C 00 00               810 	.byte #0x00,#0x00
   005E 7D 00               811 	.byte #0x7D,#0x00
   0060 00 00               812 	.byte #0x00,#0x00
   0062 00 00               813 	.byte #0x00,#0x00
   0064 A7 00               814 	.byte #0xA7,#0x00
   0066 00 00               815 	.byte #0x00,#0x00
   0068 00 00               816 	.byte #0x00,#0x00
   006A C7 00               817 	.byte #0xC7,#0x00
   006C 00 00               818 	.byte #0x00,#0x00
   006E 00 00               819 	.byte #0x00,#0x00
   0070 95 00               820 	.byte #0x95,#0x00
   0072 00 00               821 	.byte #0x00,#0x00
   0074 85 00               822 	.byte #0x85,#0x00
   0076 00 00               823 	.byte #0x00,#0x00
   0078 8D 00               824 	.byte #0x8D,#0x00
   007A 95 00               825 	.byte #0x95,#0x00
   007C 00 00               826 	.byte #0x00,#0x00
   007E A7 00               827 	.byte #0xA7,#0x00
   0080 63 00               828 	.byte #0x63,#0x00
   0082 54 00               829 	.byte #0x54,#0x00
   0084 4B 00               830 	.byte #0x4B,#0x00
   0086 00 00               831 	.byte #0x00,#0x00
   0088 5E 00               832 	.byte #0x5E,#0x00
   008A 54 00               833 	.byte #0x54,#0x00
   008C 00 00               834 	.byte #0x00,#0x00
   008E 63 00               835 	.byte #0x63,#0x00
   0090 00 00               836 	.byte #0x00,#0x00
   0092 7D 00               837 	.byte #0x7D,#0x00
   0094 70 00               838 	.byte #0x70,#0x00
   0096 85 00               839 	.byte #0x85,#0x00
   0098 00 00               840 	.byte #0x00,#0x00
   009A 00 00               841 	.byte #0x00,#0x00
   009C                     842 __xinit__mainMario_noteTime:
   009C 0F                  843 	.db #0x0F
   009D 0F                  844 	.db #0x0F
   009E 0F                  845 	.db #0x0F
   009F 0F                  846 	.db #0x0F
   00A0 0F                  847 	.db #0x0F
   00A1 0F                  848 	.db #0x0F
   00A2 0F                  849 	.db #0x0F
   00A3 0F                  850 	.db #0x0F
   00A4 0F                  851 	.db #0x0F
   00A5 0F                  852 	.db #0x0F
   00A6 0F                  853 	.db #0x0F
   00A7 0F                  854 	.db #0x0F
   00A8 0F                  855 	.db #0x0F
   00A9 0F                  856 	.db #0x0F
   00AA 0F                  857 	.db #0x0F
   00AB 0F                  858 	.db #0x0F
   00AC 0F                  859 	.db #0x0F
   00AD 0F                  860 	.db #0x0F
   00AE 0F                  861 	.db #0x0F
   00AF 0F                  862 	.db #0x0F
   00B0 0F                  863 	.db #0x0F
   00B1 0F                  864 	.db #0x0F
   00B2 0F                  865 	.db #0x0F
   00B3 0F                  866 	.db #0x0F
   00B4 0F                  867 	.db #0x0F
   00B5 0F                  868 	.db #0x0F
   00B6 0F                  869 	.db #0x0F
   00B7 0F                  870 	.db #0x0F
   00B8 0F                  871 	.db #0x0F
   00B9 0F                  872 	.db #0x0F
   00BA 0F                  873 	.db #0x0F
   00BB 0F                  874 	.db #0x0F
   00BC 0C                  875 	.db #0x0C
   00BD 0C                  876 	.db #0x0C
   00BE 0C                  877 	.db #0x0C
   00BF 0F                  878 	.db #0x0F
   00C0 0F                  879 	.db #0x0F
   00C1 0F                  880 	.db #0x0F
   00C2 0F                  881 	.db #0x0F
   00C3 0F                  882 	.db #0x0F
   00C4 0F                  883 	.db #0x0F
   00C5 0F                  884 	.db #0x0F
   00C6 0F                  885 	.db #0x0F
   00C7 0F                  886 	.db #0x0F
   00C8 0F                  887 	.db #0x0F
   00C9 0F                  888 	.db #0x0F
   00CA 0F                  889 	.db #0x0F
   00CB 0F                  890 	.db #0x0F
   00CC 0F                  891 	.db #0x0F
   00CD 0F                  892 	.db #0x0F
   00CE 0F                  893 	.db #0x0F
   00CF 0F                  894 	.db #0x0F
   00D0 0F                  895 	.db #0x0F
   00D1 0F                  896 	.db #0x0F
   00D2 0F                  897 	.db #0x0F
   00D3 0F                  898 	.db #0x0F
   00D4 0F                  899 	.db #0x0F
   00D5 0F                  900 	.db #0x0F
   00D6 0F                  901 	.db #0x0F
   00D7 0F                  902 	.db #0x0F
   00D8 0F                  903 	.db #0x0F
   00D9 0F                  904 	.db #0x0F
   00DA 0F                  905 	.db #0x0F
   00DB 0C                  906 	.db #0x0C
   00DC 0C                  907 	.db #0x0C
   00DD 0C                  908 	.db #0x0C
   00DE 0F                  909 	.db #0x0F
   00DF 0F                  910 	.db #0x0F
   00E0 0F                  911 	.db #0x0F
   00E1 0F                  912 	.db #0x0F
   00E2 0F                  913 	.db #0x0F
   00E3 0F                  914 	.db #0x0F
   00E4 0F                  915 	.db #0x0F
   00E5 0F                  916 	.db #0x0F
   00E6 0F                  917 	.db #0x0F
   00E7 0F                  918 	.db #0x0F
   00E8 0F                  919 	.db #0x0F
   00E9 0F                  920 	.db #0x0F
   00EA                     921 __xinit__underworld_melody:
   00EA FB 00               922 	.byte #0xFB,#0x00
   00EC 7D 00               923 	.byte #0x7D,#0x00
   00EE 2A 01               924 	.byte #0x2A,#0x01
   00F0 95 00               925 	.byte #0x95,#0x00
   00F2 1A 01               926 	.byte #0x1A,#0x01
   00F4 8D 00               927 	.byte #0x8D,#0x00
   00F6 00 00               928 	.byte #0x00,#0x00
   00F8 00 00               929 	.byte #0x00,#0x00
   00FA FB 00               930 	.byte #0xFB,#0x00
   00FC 7D 00               931 	.byte #0x7D,#0x00
   00FE 2A 01               932 	.byte #0x2A,#0x01
   0100 95 00               933 	.byte #0x95,#0x00
   0102 1A 01               934 	.byte #0x1A,#0x01
   0104 8D 00               935 	.byte #0x8D,#0x00
   0106 00 00               936 	.byte #0x00,#0x00
   0108 00 00               937 	.byte #0x00,#0x00
   010A 78 01               938 	.byte #0x78,#0x01
   010C BC 00               939 	.byte #0xBC,#0x00
   010E BF 01               940 	.byte #0xBF,#0x01
   0110 DF 00               941 	.byte #0xDF,#0x00
   0112 A6 01               942 	.byte #0xA6,#0x01
   0114 D3 00               943 	.byte #0xD3,#0x00
   0116 00 00               944 	.byte #0x00,#0x00
   0118 00 00               945 	.byte #0x00,#0x00
   011A 78 01               946 	.byte #0x78,#0x01
   011C BC 00               947 	.byte #0xBC,#0x00
   011E BF 01               948 	.byte #0xBF,#0x01
   0120 DF 00               949 	.byte #0xDF,#0x00
   0122 A6 01               950 	.byte #0xA6,#0x01
   0124 D3 00               951 	.byte #0xD3,#0x00
   0126 00 00               952 	.byte #0x00,#0x00
   0128 00 00               953 	.byte #0x00,#0x00
   012A D3 00               954 	.byte #0xD3,#0x00
   012C ED 00               955 	.byte #0xED,#0x00
   012E DF 00               956 	.byte #0xDF,#0x00
   0130 ED 00               957 	.byte #0xED,#0x00
   0132 D3 00               958 	.byte #0xD3,#0x00
   0134 D3 00               959 	.byte #0xD3,#0x00
   0136 3C 01               960 	.byte #0x3C,#0x01
   0138 4F 01               961 	.byte #0x4F,#0x01
   013A ED 00               962 	.byte #0xED,#0x00
   013C FB 00               963 	.byte #0xFB,#0x00
   013E B1 00               964 	.byte #0xB1,#0x00
   0140 BC 00               965 	.byte #0xBC,#0x00
   0142 8E 01               966 	.byte #0x8E,#0x01
   0144 8D 00               967 	.byte #0x8D,#0x00
   0146 95 00               968 	.byte #0x95,#0x00
   0148 9E 00               969 	.byte #0x9E,#0x00
   014A D3 00               970 	.byte #0xD3,#0x00
   014C 0A 01               971 	.byte #0x0A,#0x01
   014E 1A 01               972 	.byte #0x1A,#0x01
   0150 2A 01               973 	.byte #0x2A,#0x01
   0152 3C 01               974 	.byte #0x3C,#0x01
   0154 00 00               975 	.byte #0x00,#0x00
   0156 00 00               976 	.byte #0x00,#0x00
   0158 00 00               977 	.byte #0x00,#0x00
   015A                     978 __xinit__underworld_noteTime:
   015A 0C                  979 	.db #0x0C
   015B 0C                  980 	.db #0x0C
   015C 0C                  981 	.db #0x0C
   015D 0C                  982 	.db #0x0C
   015E 0C                  983 	.db #0x0C
   015F 0C                  984 	.db #0x0C
   0160 06                  985 	.db #0x06
   0161 03                  986 	.db #0x03
   0162 0C                  987 	.db #0x0C
   0163 0C                  988 	.db #0x0C
   0164 0C                  989 	.db #0x0C
   0165 0C                  990 	.db #0x0C
   0166 0C                  991 	.db #0x0C
   0167 0C                  992 	.db #0x0C
   0168 06                  993 	.db #0x06
   0169 03                  994 	.db #0x03
   016A 0C                  995 	.db #0x0C
   016B 0C                  996 	.db #0x0C
   016C 0C                  997 	.db #0x0C
   016D 0C                  998 	.db #0x0C
   016E 0C                  999 	.db #0x0C
   016F 0C                 1000 	.db #0x0C
   0170 06                 1001 	.db #0x06
   0171 03                 1002 	.db #0x03
   0172 0C                 1003 	.db #0x0C
   0173 0C                 1004 	.db #0x0C
   0174 0C                 1005 	.db #0x0C
   0175 0C                 1006 	.db #0x0C
   0176 0C                 1007 	.db #0x0C
   0177 0C                 1008 	.db #0x0C
   0178 06                 1009 	.db #0x06
   0179 06                 1010 	.db #0x06
   017A 12                 1011 	.db #0x12
   017B 12                 1012 	.db #0x12
   017C 12                 1013 	.db #0x12
   017D 06                 1014 	.db #0x06
   017E 06                 1015 	.db #0x06
   017F 06                 1016 	.db #0x06
   0180 06                 1017 	.db #0x06
   0181 06                 1018 	.db #0x06
   0182 06                 1019 	.db #0x06
   0183 12                 1020 	.db #0x12
   0184 12                 1021 	.db #0x12
   0185 12                 1022 	.db #0x12
   0186 12                 1023 	.db #0x12
   0187 12                 1024 	.db #0x12
   0188 12                 1025 	.db #0x12
   0189 0A                 1026 	.db #0x0A
   018A 0A                 1027 	.db #0x0A
   018B 0A                 1028 	.db #0x0A
   018C 0A                 1029 	.db #0x0A
   018D 0A                 1030 	.db #0x0A
   018E 0A                 1031 	.db #0x0A
   018F 03                 1032 	.db #0x03
   0190 03                 1033 	.db #0x03
   0191 03                 1034 	.db #0x03
   0192                    1035 __xinit__adobe_melody:
   0192 85 00              1036 	.byte #0x85,#0x00
   0194 85 00              1037 	.byte #0x85,#0x00
   0196 00 00              1038 	.byte #0x00,#0x00
   0198 85 00              1039 	.byte #0x85,#0x00
   019A 70 00              1040 	.byte #0x70,#0x00
   019C 70 00              1041 	.byte #0x70,#0x00
   019E 00 00              1042 	.byte #0x00,#0x00
   01A0 70 00              1043 	.byte #0x70,#0x00
   01A2 95 00              1044 	.byte #0x95,#0x00
   01A4 95 00              1045 	.byte #0x95,#0x00
   01A6 00 00              1046 	.byte #0x00,#0x00
   01A8 95 00              1047 	.byte #0x95,#0x00
   01AA 85 00              1048 	.byte #0x85,#0x00
   01AC 85 00              1049 	.byte #0x85,#0x00
   01AE 00 00              1050 	.byte #0x00,#0x00
   01B0 00 00              1051 	.byte #0x00,#0x00
   01B2                    1052 __xinit__adobe_noteTime:
   01B2 06                 1053 	.db #0x06
   01B3 06                 1054 	.db #0x06
   01B4 06                 1055 	.db #0x06
   01B5 06                 1056 	.db #0x06
   01B6 06                 1057 	.db #0x06
   01B7 06                 1058 	.db #0x06
   01B8 06                 1059 	.db #0x06
   01B9 06                 1060 	.db #0x06
   01BA 06                 1061 	.db #0x06
   01BB 06                 1062 	.db #0x06
   01BC 06                 1063 	.db #0x06
   01BD 06                 1064 	.db #0x06
   01BE 06                 1065 	.db #0x06
   01BF 06                 1066 	.db #0x06
   01C0 06                 1067 	.db #0x06
   01C1 06                 1068 	.db #0x06
   01C2                    1069 __xinit__beep1_melody:
   01C2 FB 00              1070 	.byte #0xFB,#0x00
   01C4 00 00              1071 	.byte #0x00,#0x00
   01C6                    1072 __xinit__beep1_noteTime:
   01C6 06                 1073 	.db #0x06
   01C7 0C                 1074 	.db #0x0C
   01C8                    1075 __xinit__beep2_melody:
   01C8 ED 00              1076 	.byte #0xED,#0x00
   01CA 00 00              1077 	.byte #0x00,#0x00
   01CC                    1078 __xinit__beep2_noteTime:
   01CC 06                 1079 	.db #0x06
   01CD 0C                 1080 	.db #0x0C
   01CE                    1081 __xinit__i:
   01CE 00 00              1082 	.byte #0x00,#0x00
                           1083 	.area CABS    (ABS,CODE)
